from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
# (Mesmo pr√©-processamento da Quest√£o 3)
heroes = pd.read_csv("C:/Users/muril/Downloads/archive/heroes_information.csv")
powers = pd.read_csv("C:/Users/muril/Downloads/archive/super_hero_powers.csv")
powers.rename(columns={'hero_names': 'name'}, inplace=True)
df = pd.merge(powers, heroes[['name', 'Alignment']], on='name', how='inner')
df = df[df['Alignment'].isin(['good', 'bad'])]

# Separar features e target
X = df.drop(columns=['name', 'Alignment']).fillna(False)
y = df['Alignment']

# Codificar target
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y_encoded = le.fit_transform(y)

# Divis√£o treino/teste
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.3, random_state=42)

# Treinamento do modelo Random Forest
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Previs√£o
y_pred_rf = rf_model.predict(X_test)

# Avalia√ß√£o
print("‚úÖ Acur√°cia (Random Forest):", accuracy_score(y_test, y_pred_rf))
print("\nüìã Relat√≥rio de Classifica√ß√£o:\n", classification_report(y_test, y_pred_rf, target_names=le.classes_))

# Matriz de confus√£o
conf_matrix_rf = confusion_matrix(y_test, y_pred_rf)
sns.heatmap(conf_matrix_rf, annot=True, fmt="d", cmap="Purples", xticklabels=le.classes_, yticklabels=le.classes_)
plt.xlabel("Predito")
plt.ylabel("Real")
plt.title("Matriz de Confus√£o - Random Forest")
plt.show()

# Mostrar import√¢ncias das features
importances = pd.Series(rf_model.feature_importances_, index=X.columns)
importances.nlargest(10).plot(kind='barh', title='Top 10 poderes mais importantes')
plt.xlabel("Import√¢ncia")
plt.show()
