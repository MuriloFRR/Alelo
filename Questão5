import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error

# Carregar os dados
heroes = pd.read_csv("C:/Users/muril/Downloads/archive/heroes_information.csv")
powers = pd.read_csv("C:/Users/muril/Downloads/archive/super_hero_powers.csv")

# Renomear para merge
powers = powers.rename(columns={"hero_names": "name"})
df = pd.merge(powers, heroes, on="name", how="inner")

# Converter colunas para numérico
df["Weight"] = pd.to_numeric(df["Weight"], errors="coerce")
df["Height"] = pd.to_numeric(df["Height"], errors="coerce")

# Remover linhas sem peso (target da regressão)
df = df[df["Weight"].notnull()]
df["Height"].fillna(df["Height"].median(), inplace=True)

# Preencher valores ausentes em variáveis categóricas
df["Gender"].fillna("Unknown", inplace=True)
df["Race"].fillna("Unknown", inplace=True)
df["Publisher"].fillna("Unknown", inplace=True)

# OPCIONAL: remover colunas que podem ter strings irrelevantes
df.drop(columns=["Eye color", "Hair color", "Skin color"], inplace=True, errors="ignore")

# Target
y = df["Weight"]

# Features (poderes + altura + variáveis categóricas codificadas)
X = df.drop(columns=["name", "Weight", "id", "Unnamed: 0"], errors="ignore")
X = pd.get_dummies(X, drop_first=True)
X = X.fillna(0)

# Treinar/testar
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("R² Score:", r2_score(y_test, y_pred))
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RMSE:", mean_squared_error(y_test, y_pred, squared=False))
